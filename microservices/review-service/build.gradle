buildscript {
	ext {
		springBootVersion = '2.3.2.RELEASE'
		mapStructVersion = "1.3.1.Final" // Chapter 6: dependency version
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'se.magnus.microservices.core.review'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	implementation project(':api')
	implementation project(':util')
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-webflux')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('io.projectreactor:reactor-test')
	testImplementation group: 'junit', name: 'junit', version: '4.13.2'

	//Chapter 5: add new dependency
	implementation('io.springfox:springfox-swagger2:3.0.0') // to support Swagger 2 based documentation

	// Chapter 6: MapStruct to transform between Spring Data entity objects and API model classes
	implementation("org.mapstruct:mapstruct:${mapStructVersion}")

	// Chapter 6: MapStruct generates the implementation of the bean mappings at compile time by processing MapStruct annotation
	annotationProcessor("org.mapstruct:mapstruct-processor:${mapStructVersion}")
	testAnnotationProcessor("org.mapstruct:mapstruct-processor:${mapStructVersion}")

	// Chapter 6: To make compile-time generation work
	compileOnly("org.mapstruct:mapstruct-processor:${mapStructVersion}")

	// Chapter 6: Sprint Data for JPA MySQL (runtime)
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('mysql:mysql-connector-java')

	// Chapter 6: Use embedded database H2 during test
	testImplementation('com.h2database:h2')

	compileOnly 'org.projectlombok:lombok:1.18.30'
}

jar {
	manifest {
		attributes(
				'Class-Path': configurations.runtimeClasspath.files.collect { it.getName() }.join(' '),
				'Main-Class': 'se.magnus.microservices.core.review.ReviewServiceApplication'
		)
	}
}
